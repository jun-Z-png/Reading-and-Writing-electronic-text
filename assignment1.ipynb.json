{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "A Leonard Cohen personality generator"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "part1 = [\n",
    "    'Roshi s very tired',\n",
    "    'Better than darkness is fake darkness',\n",
    "    'The only thing I don t need is a comb',\n",
    "    'Seisen has a long body',\n",
    "    'By the rivers dark I wandered by',\n",
    "    'Leonardos, I am no longer lonely',\n",
    "    'I am Theodoros',\n",
    "    'Darling, I now have a butter dish',\n",
    "    'remembering my mother at a theatre in Athens',\n",
    "    \"Peace did not come into my life\",\n",
    "    \"She entered my waist with her snow\",\n",
    "     \"'We are college girls from Ontario'\"\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": [
    "part2 = [\n",
    "    \"The Sweet indifference some call fate but we have names more intimate\",\n",
    "    \"Fare thee well my nitingale\",\n",
    "    \"I'm almost alive I'm almost at home\",\n",
    "    \"He's going to get sick and die alone\",\n",
    "    \"let me see the waitress's tiny earrings\",\n",
    "    \"Puppet vultures eat the dead puppet corpses they are fed\",\n",
    "    \"She said, don't be a jerk, Len\",\n",
    "    \"Dear reader, please forgive me if I have wasted your time\",\n",
    "    \"I love the way the sun speaks\",\n",
    "    \"It's her ownerless expression\",\n",
    "    \"It is better when I'm lost\",\n",
    "    \"Well ordered and alone, huge heart, self-pitiless\"\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "noun = [\n",
    "    \"Takanawa Prince Hotel Bar\",\n",
    "    \"A young nun\",\n",
    "    \"Your comrade\",\n",
    "    \"The gender-free drunk\",\n",
    "    \"What buffled me\",\n",
    "    \"The crystal of salt on her eyelashes\",\n",
    "    \"Alexandra leaving\",\n",
    "    \"The Moon\",\n",
    "    \"Lovesick Monk\",\n",
    "    \"True self\",\n",
    "   \"a magic cure\"\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "state = [\n",
    "    \"drink blue coffee\",\n",
    "    \"sleep in the corner of a cabin\",\n",
    "    \"forget to suffer\",\n",
    "    \"by the rivers dark\",\n",
    "    \"at hiroshima\",\n",
    "    \"sail around singing\",\n",
    "    \"filled with fear and desire\",\n",
    "    \"is speaking fiercely for our virgin humanity \",\n",
    "    \"is riding the night's last flicker of hope\",\n",
    "    \"hid in themes of marble\",\n",
    "    \"look into face after face\",\n",
    "    \"Facing the tide\"\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "By the rivers dark I wandered by\n",
      "  Fare thee well my nitingale\n",
      "     Your comrade\n",
      "        look into face after face\n",
      "\n",
      "  'We are college girls from Ontario'\n",
      "Well ordered and alone, huge heart, self-pitiless\n",
      "\n",
      "The only thing I don t need is a comb\n",
      "  She said, don't be a jerk, Len\n",
      "     True self\n",
      "        is riding the night's last flicker of hope\n",
      "\n",
      "  Better than darkness is fake darkness\n",
      "I love the way the sun speaks\n",
      "\n",
      "I am Theodoros\n",
      "  He's going to get sick and die alone\n",
      "     a magic cure\n",
      "        sleep in the corner of a cabin\n",
      "\n",
      "  Peace did not come into my life\n",
      "Puppet vultures eat the dead puppet corpses they are fed\n",
      "\n"
     ]
    }
   ],
   "source": [
    "import random\n",
    "import textwrap\n",
    "stanza_size = 3\n",
    "for i in range(stanza_size):\n",
    "    print(random.choice(part1))\n",
    "    print(\"  \" + random.choice(part2))\n",
    "    print(\"     \" + random.choice(noun))\n",
    "    print(\"        \" + random.choice(state))\n",
    "    print()\n",
    "    print(\"  \" + random.choice(part1))\n",
    "    print(random.choice(part2))\n",
    "    print()\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
